# Default values for port-scan-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dsimionato/port-scan-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Set a NetworkPolicy with:
# ingress only on service.port
# egress to all pods
networkPolicy:
  enabled: true

rbac:
  # Whether to create RBAC resources (serviceAccount, clusterRole, and clusterRoleBinding).
  create: true
  # Annotations to add to the RBAC resources
  annotations: {}
  # The name of the service account to use.
  serviceAccountName: "port-scan-exporter-sa"
  # The name of the cluster role to use.
  clusterRoleName: "port-scan-exporter"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  portName: http

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Add a ServiceMonitor for prometheus-operator
monitor:
  enabled: false
  additionalLabels: {}

  jobLabel: ""

  # List of pod labels to add to node exporter metrics
  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitor
  podTargetLabels: []

  scheme: http

  relabelings: []
  metricRelabelings: []
  interval: "5m"
  scrapeTimeout: 240s
  ## prometheus.monitor.apiVersion ApiVersion for the serviceMonitor Resource(defaults to "monitoring.coreos.com/v1")
  apiVersion: ""

  ## SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
  ##
  sampleLimit: 0

  ## TargetLimit defines a limit on the number of scraped targets that will be accepted.
  ##
  targetLimit: 0

  ## Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
  ##
  labelLimit: 0

  ## Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
  ##
  labelNameLengthLimit: 0

  ## Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
  ##
  labelValueLengthLimit: 0

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
